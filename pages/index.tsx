/* eslint-disable react-hooks/rules-of-hooks */
import React, { FormEvent, useEffect, useState } from "react";
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import { firestore } from '../firebase/clientApp';

import {collection,QueryDocumentSnapshot,DocumentData,query,where,limit,getDocs} from "@firebase/firestore";

const tradeCollection = collection(firestore,'trade');


const [todos,setTodos] = useState<QueryDocumentSnapshot<DocumentData>[]>([]);
const [loading,setLoading] = useState<boolean>(true);

//declaração de tipos das propriedades que o component Home espera receber
interface IPropsComponent {
  list: any[];
  page: number;
  total_pages: number;
  search: boolean;
  searchParam: string;
}

const Home: NextPage = (searchParam) => {

// Inicizaliação do state que armazena o valor do input search
const [search, setSearch] = useState(searchParam);

// Inicizaliação do state que armazena o valor da propriedade searchParam
const [result, setResult] = useState<undefined | string>(undefined);

const getTodos = async () => {
  // construct a query to get up to 10 undone todos 
  const todosQuery = query(tradeCollection,where('done','==',false),limit(10));
  // get the todos
  const querySnapshot = await getDocs(todosQuery);
  
  // map through todos adding them to an array
  const result: QueryDocumentSnapshot<DocumentData>[] = [];
  querySnapshot.forEach((snapshot) => {
  result.push(snapshot);
  });
  // set it to state
  setTodos(result);
};

useEffect( () => {
  // get the todos
  getTodos();
  // reset loading
  setTimeout( () => {
    setLoading(false);
  },2000)
},[]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Trade list App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Banner
        </h1>

        <p className={styles.description}>
        description
          <code className={styles.code}>
            <form >
              <input 
              type="text"
              placeholder="Buscar um comércio"
            />
              <button type="submit">Buscar</button>
            </form>
          </code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

         
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
